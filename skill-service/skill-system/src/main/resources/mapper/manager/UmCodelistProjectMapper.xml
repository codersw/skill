<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skill.manager.mapper.UmCodelistProjectMapper">
    
    <resultMap type="UmCodelistProject" id="UmCodelistProjectResult">
        <result property="projectId"    column="project_id"    />
        <result property="projectName"    column="project_name"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>



    <sql id="selectUmCodelistProjectVo">
        select T.project_id, T.project_name, T.status, T.create_by, T.create_time, T.update_by, T.update_time
        from um_codelist_project T
    </sql>

    <select id="selectUmCodelistProjectList" parameterType="UmCodelistProject" resultMap="UmCodelistProjectResult">
        <include refid="selectUmCodelistProjectVo"/>
        <where>
            and T.status = '0'
            <if test="projectName != null  and projectName != ''"> and T.project_name like concat('%', #{projectName}, '%')</if>
        </where>
    </select>


    <select id="selectUmCodelistProjectById" parameterType="String" resultMap="UmCodelistProjectResult">
        <include refid="selectUmCodelistProjectVo"/>
        where T.project_id = #{projectId}
    </select>
        
    <insert id="insertUmCodelistProject" parameterType="UmCodelistProject">
        insert into um_codelist_project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="projectId != null  and projectId != ''">project_id,</if>
            <if test="projectName != null  and projectName != ''">project_name,</if>
            <if test="status != null  and status != ''">status,</if>
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateBy != null  and updateBy != ''">update_by,</if>
            <if test="updateTime != null ">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="projectId != null  and projectId != ''">#{projectId},</if>
            <if test="projectName != null  and projectName != ''">#{projectName},</if>
            <if test="status != null  and status != ''">#{status},</if>
            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null ">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateUmCodelistProject" parameterType="UmCodelistProject">
        update um_codelist_project
        <trim prefix="SET" suffixOverrides=",">
            <if test="projectName != null  and projectName != ''">project_name = #{projectName},</if>
            <if test="status != null  and status != ''">status = #{status},</if>
            <if test="createBy != null  and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
        </trim>
        where project_id = #{projectId}
    </update>

    <!--逻辑删除时使用该语句-->
    <update id="deleteUmCodelistProjectByIds" parameterType="String">
        update um_codelist_project
        <trim prefix="SET" suffixOverrides=",">
            status = '1'
        </trim>
        where  project_id in
        <foreach item="projectId" collection="array" open="(" separator="," close=")">
            #{projectId}
        </foreach>
    </update>

    <delete id="deleteUmCodelistProjectById" parameterType="String">
        delete from um_codelist_project where project_id = #{projectId}
    </delete>

<!--    <delete id="deleteUmCodelistProjectByIds" parameterType="String">-->
<!--        delete from um_codelist_project where project_id in -->
<!--        <foreach item="projectId" collection="array" open="(" separator="," close=")">-->
<!--            #{projectId}-->
<!--        </foreach>-->
<!--    </delete>-->
    
</mapper>