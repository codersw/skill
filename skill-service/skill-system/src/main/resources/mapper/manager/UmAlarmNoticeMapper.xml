<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skill.manager.mapper.UmAlarmNoticeMapper">
    
    <resultMap type="UmAlarmNotice" id="UmAlarmNoticeResult">
        <result property="alarmNoticeId"    column="alarm_notice_id"    />
        <result property="createTime"    column="create_time"    />
        <result property="alarmType"    column="alarm_type"    />
        <result property="solveState"    column="solve_state"    />
        <result property="description"    column="description"    />
        <result property="solver"    column="solver"    />
        <result property="solveTime"    column="solve_time"    />
        <result property="equipmentId"    column="equipment_id"    />
        <result property="sensorId"    column="sensor_id"    />
        <result property="rackId"    column="rack_id"    />
        <result property="rackAisleId"    column="rack_aisle_id"    />
        <result property="dcRoomId"    column="dc_room_id"    />
        <result property="datacenterId"    column="datacenter_id"    />
        <result property="factoryId"    column="factory_id"    />
        <result property="alarmValue"    column="alarm_value"    />
        <result property="remarks"    column="remarks"    />
    </resultMap>

    <sql id="selectUmAlarmNoticeVo">
        select code.dict_label alarmTypeName,
               n.alarm_notice_id,
               n.remarks,
               n.create_time,
               n.alarm_type,
               n.solve_state,
               n.description,
               solver,
               n.solve_time,
               n.equipment_id,
               n.sensor_id,
               n.rack_id,
               n.rack_aisle_id,
               n.dc_room_id,
               n.datacenter_id,
               n.factory_id,
               n.alarm_value,
               f.factory_name as factoryname ,
               dc.datacenter_name as datacentername,
               dcr.dc_room_name as dcroomname,
               aisle.rack_aisle_name as rackaislename,
               rack.rack_name as rackname,
               ent.equipment_name as equipmentname,
               sensor.sensor_name as sensorname,
               solve.dict_label solveName
        from um_alarm_notice n
                 left join um_scene_factory f on n.factory_id = f.factory_id
                 left join um_scene_datacenter dc on n.datacenter_id = dc.datacenter_id
                 left join um_scene_datacenter_room  dcr on n.dc_room_id = dcr.dc_room_id
                 left join um_equipment_rack rack on n.rack_id = rack.rack_id
                 left join um_equipment_rack_aisle aisle on aisle.rack_aisle_id = n.rack_aisle_id
                 left join um_equipment ent on n.equipment_id=ent.equipment_id
                 left join um_equipment_sensor sensor on sensor.sensor_id=n.sensor_id
                 left join (select * from sys_dict_data where dict_type = 'Alarm_Type')  code on n.alarm_type = code.dict_value
                 left join (select * from sys_dict_data where dict_type = 'solve_state')  solve on n.solve_state = solve.dict_value
    </sql>

    <select id="selectUmAlarmNoticeList" parameterType="UmAlarmNotice" resultMap="UmAlarmNoticeResult">
        <include refid="selectUmAlarmNoticeVo"/>
        <where>
            <if test="solver != null  and solver != ''"> and solver like concat('%', #{solver}, '%')</if>
            <if test="alarmType != null  and alarmType != ''"> and n.alarm_type = #{alarmType}</if>
            <if test="solveState != null  and solveState != ''"> and n.solve_state = #{solveState}</if>
            <if test="equipmentId != null  and equipmentId != ''"> and n.equipment_id = #{equipmentId}</if>
            <if test="rackId != null  and rackId != ''"> and n.rack_id = #{rackId}</if>
            <if test="sensorId != null  and sensorId != ''"> and n.sensor_id = #{sensorId}</if>
            <if test="rackAisleId != null  and rackAisleId != ''"> and n.rack_aisle_id = #{rackAisleId}</if>
            <if test="dcRoomId != null  and dcRoomId != ''"> and n.dc_room_id = #{dcRoomId}</if>
            <if test="datacenterId != null  and datacenterId != ''"> and n.datacenter_id = #{datacenterId}</if>
            <if test="factoryId != null  and factoryId != ''"> and n.factory_id = #{factoryId}</if>
        </where>
        order by create_time desc
    </select>
    <!--默认工厂也不传-->
    <sql id="selectUmAlarmNoticeVoisbulltrim">
        SELECT
            T.count,
            f.factory_name AS item,
            T.factory_id
        FROM
            ( SELECT factory_id, count( * ) AS count FROM um_alarm_notice n GROUP BY factory_id ) T
                LEFT JOIN um_scene_factory f ON T.factory_id = f.factory_id
    </sql>
    <select id="selectUmAlarmNoticeVoisbulltrim" parameterType="String" resultMap="UmAlarmNoticeResult">
        <include refid="selectUmAlarmNoticeVoisbulltrim"/>
    </select>

    <!--默认时间也不传-->
    <sql id="selectUmAlarmNoticeVoiscreatetime">
        SELECT
            DATE_FORMAT( create_time, "%Y-%m-%d" ) AS year,
	count( * ) AS value
        FROM
            um_alarm_notice
        GROUP BY
            DATE_FORMAT( create_time, "%Y-%m-%d" )
    </sql>
    <select id="selectUmAlarmNoticeVoiscreatetime" parameterType="String" resultMap="UmAlarmNoticeResult">
        <include refid="selectUmAlarmNoticeVoiscreatetime"/>
    </select>

    <!--传工厂-->
    <sql id="selectUmAlarmNoticeVoisfactoryid">
        SELECT
            count( * )  AS count,
            n.datacenter_id,
            d.datacenter_name AS item,
            n.datacenter_id
        FROM
            um_alarm_notice n
                left join um_scene_datacenter d
                          on n.datacenter_id = d.datacenter_id
    </sql>

    <select id="selectUmAlarmNoticeVoisfactoryid" parameterType="UmAlarmNotice" resultMap="UmAlarmNoticeResult">
        <include refid="selectUmAlarmNoticeVoisfactoryid"/>
        <where>
            <if test="factoryId != null  and factoryId != ''"> and n.factory_id = #{factoryId}</if>
        </where>
        and n.datacenter_id is not null
        GROUP BY datacenter_id
    </select>

    <!--选中工厂传时间-->
    <sql id="selectUmAlarmNoticeVoisfactoryidcreatetime">
        SELECT
            DATE_FORMAT( create_time, "%Y-%m-%d" ) AS year,
            count( * ) AS value
        FROM
            um_alarm_notice
    </sql>

    <select id="selectUmAlarmNoticeVoisfactoryidcreatetime" parameterType="UmAlarmNotice" resultMap="UmAlarmNoticeResult">
        <include refid="selectUmAlarmNoticeVoisfactoryidcreatetime"/>
        <where>
            <if test="factoryId != null  and factoryId != ''"> and factory_id = #{factoryId}</if>
        </where>
        GROUP BY DATE_FORMAT( create_time, "%Y-%m-%d" )
    </select>

    <!--传中心-->
    <sql id="selectUmAlarmNoticeVoisdcroomid">
        SELECT
            count( * ) AS count,
            n.dc_room_id,
            r.dc_room_name AS item,
            n.dc_room_id
        FROM
            um_alarm_notice n
                LEFT JOIN um_scene_datacenter_room r ON n.dc_room_id = r.dc_room_id
    </sql>
    <select id="selectUmAlarmNoticeVoisdcroomid" parameterType="UmAlarmNotice" resultMap="UmAlarmNoticeResult">
        <include refid="selectUmAlarmNoticeVoisdcroomid"/>
        <where>
            <if test="datacenterId != null  and datacenterId != ''"> and n.datacenter_id = #{datacenterId}</if>
        </where>
        and n.datacenter_id is not null
        GROUP BY dc_room_id
    </select>

    <!--选中中心传时间-->
    <sql id="selectUmAlarmNoticeVoisdcroomidcreatetime">
        SELECT
            DATE_FORMAT( create_time, "%Y-%m-%d" )AS year,
	count( * ) AS value
        FROM
            um_alarm_notice
    </sql>
    <select id="selectUmAlarmNoticeVoisdcroomidcreatetime" parameterType="UmAlarmNotice" resultMap="UmAlarmNoticeResult">
        <include refid="selectUmAlarmNoticeVoisdcroomidcreatetime"/>
        <where>
            <if test="datacenterId != null  and datacenterId != ''"> and datacenter_id = #{datacenterId}</if>
        </where>
        GROUP BY DATE_FORMAT( create_time, "%Y-%m-%d" )
    </select>

    <!--传房间-->
    <sql id="selectUmAlarmNoticeVoisrackaisleid">
        SELECT
            count( * ) AS count,
            n.rack_aisle_id,
            a.rack_aisle_name AS item,
            n.rack_aisle_id
        FROM
            um_alarm_notice n
                LEFT JOIN um_equipment_rack_aisle a ON n.rack_aisle_id = a.rack_aisle_id
    </sql>
    <select id="selectUmAlarmNoticeVoisrackaisleid" parameterType="UmAlarmNotice" resultMap="UmAlarmNoticeResult">
        <include refid="selectUmAlarmNoticeVoisrackaisleid"/>
        <where>
            <if test="dcRoomId != null  and dcRoomId != ''"> and n.dc_room_id = #{dcRoomId}</if>
        </where>
        AND n.rack_aisle_id IS NOT NULL
        GROUP BY rack_aisle_id
    </select>

    <!--选中房间传时间-->
    <sql id="selectUmAlarmNoticeVoisrackaisleidcreatetime">
        SELECT
            DATE_FORMAT( create_time, "%Y-%m-%d" )AS year,
	count( * ) AS value
        FROM
            um_alarm_notice
    </sql>
    <select id="selectUmAlarmNoticeVoisrackaisleidcreatetime" parameterType="UmAlarmNotice" resultMap="UmAlarmNoticeResult">
        <include refid="selectUmAlarmNoticeVoisrackaisleidcreatetime"/>
        <where>
            <if test="dcRoomId != null  and dcRoomId != ''"> and dc_room_id = #{dcRoomId}</if>
        </where>
        GROUP BY DATE_FORMAT( create_time, "%Y-%m-%d" )
    </select>

    <!--传通道-->
    <sql id="selectUmAlarmNoticeVoisrackid">
        SELECT
            count( * ) AS count,
            n.rack_id,
            r.rack_name AS item,
            n.rack_id
        FROM
            um_alarm_notice n
                LEFT JOIN um_equipment_rack r ON n.rack_id = r.rack_id
    </sql>
    <select id="selectUmAlarmNoticeVoisrackid" parameterType="UmAlarmNotice" resultMap="UmAlarmNoticeResult">
        <include refid="selectUmAlarmNoticeVoisrackid"/>
        <where>
            <if test="rackAisleId != null  and rackAisleId != ''"> and n.rack_aisle_id = #{rackAisleId}</if>
        </where>
        AND n.rack_id IS NOT NULL
        GROUP BY rack_id
    </select>

    <!--选中通道传时间-->
    <sql id="selectUmAlarmNoticeVoisrackidcreatetime">
        SELECT
            DATE_FORMAT( create_time, "%Y-%m-%d" )AS year,
	count( * ) AS value
        FROM
            um_alarm_notice
    </sql>
    <select id="selectUmAlarmNoticeVoisrackidcreatetime" parameterType="UmAlarmNotice" resultMap="UmAlarmNoticeResult">
        <include refid="selectUmAlarmNoticeVoisrackidcreatetime"/>
        <where>
            <if test="rackAisleId != null  and rackAisleId != ''"> and rack_aisle_id = #{rackAisleId}</if>
        </where>
        GROUP BY DATE_FORMAT( create_time, "%Y-%m-%d" )
    </select>

    <!--传机柜-->
    <sql id="selectUmAlarmNoticeVoisequipmentid">
        SELECT
            count( * ) AS count,
            n.equipment_id,
            e.equipment_name AS item,
            n.equipment_id
        FROM
            um_alarm_notice n
                LEFT JOIN um_equipment e ON n.equipment_id = e.equipment_id
    </sql>
    <select id="selectUmAlarmNoticeVoisequipmentid" parameterType="UmAlarmNotice" resultMap="UmAlarmNoticeResult">
        <include refid="selectUmAlarmNoticeVoisequipmentid"/>
        <where>
            <if test="rackId != null  and rackId != ''"> and n.rack_id = #{rackId}</if>
        </where>
        AND n.equipment_id IS NOT NULL
        GROUP BY equipment_id
    </select>

    <!--选中机柜传时间-->
    <sql id="selectUmAlarmNoticeVoisequipmentidcreatetime">
        SELECT
            DATE_FORMAT( create_time, "%Y-%m-%d" )AS year,
	count( * ) AS value
        FROM
            um_alarm_notice
    </sql>
    <select id="selectUmAlarmNoticeVoisequipmentidcreatetime" parameterType="UmAlarmNotice" resultMap="UmAlarmNoticeResult">
        <include refid="selectUmAlarmNoticeVoisequipmentidcreatetime"/>
        <where>
            <if test="rackId != null  and rackId != ''"> and rack_id = #{rackId}</if>
        </where>
        GROUP BY DATE_FORMAT( create_time, "%Y-%m-%d" )
    </select>
<!--查询警告信息饼形图-->
    <sql id="selectUmAlarmNoticeVoistypedetails">
        SELECT c.dict_label as item,
               count(*) as count
        FROM
            um_alarm_notice n
            LEFT JOIN ( SELECT * FROM sys_dict_data WHERE dict_type = 'Alarm_Type' ) c ON n.alarm_type = c.dict_value
    </sql>
    <select id="selectUmAlarmNoticeVoistypedetails" parameterType="UmAlarmNotice" resultMap="UmAlarmNoticeResult">
        <include refid="selectUmAlarmNoticeVoistypedetails"/>
        <where>
            <if test="factoryId != null  and factoryId != ''"> and n.factory_id = #{factoryId}</if>
            <if test="datacenterId != null  and datacenterId != ''"> and n.datacenter_id = #{datacenterId}</if>
            <if test="dcRoomId != null  and dcRoomId != ''"> and n.dc_room_id = #{dcRoomId}</if>
            <if test="rackAisleId != null  and rackAisleId != ''"> and n.rack_aisle_id = #{rackAisleId}</if>
            <if test="rackId != null  and rackId != ''"> and n.rack_id = #{rackId}</if>
            <if test="equipmentId != null  and equipmentId != ''"> and n.equipment_id = #{equipmentId}</if>
        </where>
        GROUP BY c.dict_label
    </select>
<!--    根据id查询-->
    <select id="selectUmAlarmNoticeById" parameterType="String" resultMap="UmAlarmNoticeResult">
        <include refid="selectUmAlarmNoticeVo"/>
        where n.alarm_notice_id = #{alarmNoticeId}
    </select>

    <!--没用得-->
    <sql id="selectUmAlarmNoticeVoisitem">
        SELECT
            count( * ) AS count,
	T.item
        FROM
            (
            SELECT CODE
            .dict_label item
            FROM
            um_alarm_notice n
            LEFT JOIN ( SELECT * FROM sys_dict_data WHERE dict_type = 'Alarm_Type' ) CODE ON n.alarm_type = CODE.dict_value
            ) T
        GROUP BY
            T.item
    </sql>
    <select id="selectUmAlarmNoticeVoisitem" parameterType="String" resultMap="UmAlarmNoticeResult">
        <include refid="selectUmAlarmNoticeVoisitem"/>
    </select>

    <insert id="insertUmAlarmNotice" parameterType="UmAlarmNotice">
        insert into um_alarm_notice
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="alarmNoticeId != null  and alarmNoticeId != ''">alarm_notice_id,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="alarmType != null  and alarmType != ''">alarm_type,</if>
            <if test="remarks != null  and remarks != ''">remarks,</if>
            <if test="solveState != null  and solveState != ''">solve_state,</if>
            <if test="description != null  and description != ''">description,</if>
            <if test="solver != null  and solver != ''">solver,</if>
            <if test="solveTime != null ">solve_time,</if>
            <if test="equipmentId != null  and equipmentId != ''">equipment_id,</if>
            <if test="sensorId != null  and sensorId != ''">sensor_id,</if>
            <if test="rackId != null  and rackId != ''">rack_id,</if>
            <if test="rackAisleId != null  and rackAisleId != ''">rack_aisle_id,</if>
            <if test="dcRoomId != null  and dcRoomId != ''">dc_room_id,</if>
            <if test="datacenterId != null  and datacenterId != ''">datacenter_id,</if>
            <if test="factoryId != null  and factoryId != ''">factory_id,</if>
            <if test="alarmValue != null  and alarmValue != ''">alarm_value,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="alarmNoticeId != null  and alarmNoticeId != ''">#{alarmNoticeId},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="alarmType != null  and alarmType != ''">#{alarmType},</if>
            <if test="solveState != null  and solveState != ''">#{solveState},</if>
            <if test="description != null  and description != ''">#{description},</if>
            <if test="solver != null  and solver != ''">#{solver},</if>
            <if test="solveTime != null ">#{solveTime},</if>
            <if test="equipmentId != null  and equipmentId != ''">#{equipmentId},</if>
            <if test="sensorId != null  and sensorId != ''">#{sensorId},</if>
            <if test="rackId != null  and rackId != ''">#{rackId},</if>
            <if test="rackAisleId != null  and rackAisleId != ''">#{rackAisleId},</if>
            <if test="dcRoomId != null  and dcRoomId != ''">#{dcRoomId},</if>
            <if test="datacenterId != null  and datacenterId != ''">#{datacenterId},</if>
            <if test="factoryId != null  and factoryId != ''">#{factoryId},</if>
            <if test="alarmValue != null  and alarmValue != ''">#{alarmValue},</if>
         </trim>
    </insert>

    <update id="updateUmAlarmNotice" parameterType="UmAlarmNotice">
        update um_alarm_notice
        <trim prefix="SET" suffixOverrides=",">
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="alarmType != null  and alarmType != ''">alarm_type = #{alarmType},</if>
            <if test="remarks != null  and remarks != ''">remarks = #{remarks},</if>
            <if test="solveState != null  and solveState != ''">solve_state = #{solveState},</if>
            <if test="description != null  and description != ''">description = #{description},</if>
            <if test="solver != null  and solver != ''">solver = #{solver},</if>
            <if test="solveTime != null ">solve_time = #{solveTime},</if>
            <if test="equipmentId != null  and equipmentId != ''">equipment_id = #{equipmentId},</if>
            <if test="sensorId != null  and sensorId != ''">sensor_id = #{sensorId},</if>
            <if test="rackId != null  and rackId != ''">rack_id = #{rackId},</if>
            <if test="rackAisleId != null  and rackAisleId != ''">rack_aisle_id = #{rackAisleId},</if>
            <if test="dcRoomId != null  and dcRoomId != ''">dc_room_id = #{dcRoomId},</if>
            <if test="datacenterId != null  and datacenterId != ''">datacenter_id = #{datacenterId},</if>
            <if test="factoryId != null  and factoryId != ''">factory_id = #{factoryId},</if>
            <if test="alarmValue != null  and alarmValue != ''">alarm_value = #{alarmValue},</if>
        </trim>
        where alarm_notice_id = #{alarmNoticeId}
    </update>

    <update id="skupdateUmAlarmNoticesolvestate" parameterType="UmAlarmNotice">
        update um_alarm_notice
        <trim prefix="SET" suffixOverrides=",">
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="alarmType != null  and alarmType != ''">alarm_type = #{alarmType},</if>
            <if test="remarks != null  and remarks != ''">remarks = #{remarks},</if>
            <if test="solveState != null  or solveState == null ">solve_state = #{solveState},</if>
            <if test="description != null  and description != ''">description = #{description},</if>
            <if test="solver != null  and solver != ''">solver = #{solver},</if>
            <if test="solveTime != null ">solve_time = #{solveTime},</if>
            <if test="equipmentId != null  and equipmentId != ''">equipment_id = #{equipmentId},</if>
            <if test="sensorId != null  and sensorId != ''">sensor_id = #{sensorId},</if>
            <if test="rackId != null  and rackId != ''">rack_id = #{rackId},</if>
            <if test="rackAisleId != null  and rackAisleId != ''">rack_aisle_id = #{rackAisleId},</if>
            <if test="dcRoomId != null  and dcRoomId != ''">dc_room_id = #{dcRoomId},</if>
            <if test="datacenterId != null  and datacenterId != ''">datacenter_id = #{datacenterId},</if>
            <if test="factoryId != null  and factoryId != ''">factory_id = #{factoryId},</if>
            <if test="alarmValue != null  and alarmValue != ''">alarm_value = #{alarmValue},</if>
        </trim>
        where alarm_notice_id = #{alarmNoticeId}
    </update>

    <!--逻辑删除时使用该语句
    <update id="deleteUmAlarmNoticeByIds" parameterType="String">
        update um_alarm_notice
        <trim prefix="SET" suffixOverrides=",">
            status = '1'
        </trim>
        where  alarm_notice_id in
        <foreach item="alarmNoticeId" collection="array" open="(" separator="," close=")">
            #{alarmNoticeId}
        </foreach>
    </update>-->

    <delete id="deleteUmAlarmNoticeById" parameterType="String">
        delete from um_alarm_notice where alarm_notice_id = #{alarmNoticeId}
    </delete>

    <delete id="deleteUmAlarmNoticeByIds" parameterType="String">
        delete from um_alarm_notice where alarm_notice_id in 
        <foreach item="alarmNoticeId" collection="array" open="(" separator="," close=")">
            #{alarmNoticeId}
        </foreach>
    </delete>
    
</mapper>