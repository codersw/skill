<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skill.manager.mapper.UmEquipmentRackskillMapper">
    
    <resultMap type="UmEquipmentRackskill" id="UmEquipmentRackskillResult">
        <result property="rackskillId"    column="rack_skill_id"    />
        <result property="rackId"    column="rack_id"    />
        <result property="rackAisleId"    column="rack_aisle_id"    />
        <result property="dcRoomId"    column="dc_room_id"    />
        <result property="datacenterId"    column="datacenter_id"    />
        <result property="factoryId"    column="factory_id"    />
        <result property="skillNo"    column="skill_no"    />
        <result property="rfId"    column="rf_id"    />
        <result property="skillState"    column="skill_state"    />
        <result property="rackEquipmentId"    column="rack_equipment_id"    />
        <result property="serverskill"    column="server_skill"    />
        <result property="skillLampState"    column="skill_lamp_state"    />
        <result property="remark"    column="remark"    />

    </resultMap>

    <sql id="selectUmEquipmentRackskillVo">
        select distinct u.rack_skill_id, u.rack_id, u.rack_aisle_id, u.dc_room_id,
        u.datacenter_id, u.factory_id, u.skill_no, u.rf_id, u.skill_state,u.skill_lamp_state,
        u.rack_equipment_id, u.server_skill,u.remark,
        equ.equipment_name as rackEquipmentName
        from um_equipment_rack_skill u
        left join um_equipment equ on u.rack_equipment_id = equ.equipment_id
    </sql>

    <select id="selectUmEquipmentRackskillList" parameterType="UmEquipmentRackskill" resultMap="UmEquipmentRackskillResult">
        <include refid="selectUmEquipmentRackskillVo"/>
        <where>  
            <if test="rackId != null  and rackId != ''"> and u.rack_id = #{rackId}</if>
            <if test="rackAisleId != null  and rackAisleId != ''"> and u.rack_aisle_id = #{rackAisleId}</if>
            <if test="dcRoomId != null  and dcRoomId != ''"> and u.dc_room_id = #{dcRoomId}</if>
            <if test="datacenterId != null  and datacenterId != ''"> and u.datacenter_id = #{datacenterId}</if>
            <if test="factoryId != null  and factoryId != ''"> and u.factory_id = #{factoryId}</if>
            <if test="rackEquipmentId != null  and rackEquipmentId != ''"> and u.rack_equipment_id = #{rackEquipmentId}</if>
            <if test="serverskill != null  and serverskill != ''"> and u.server_skill = #{serverskill}</if>
            <if test="skillState != null  and skillState != ''"> and u.skill_state = #{skillState}</if>
            <if test="skillLampState != null  and skillLampState != ''"> and u.skill_lamp_state = #{skillLampState}</if>
        </where>
        order by u.skill_no+1
    </select>
    
    <select id="selectUmEquipmentRackskillById" parameterType="String" resultMap="UmEquipmentRackskillResult">
        <include refid="selectUmEquipmentRackskillVo"/>
        where u.rack_skill_id = #{rackskillId}
    </select>
        
    <insert id="insertUmEquipmentRackskill" parameterType="UmEquipmentRackskill">
        insert into um_equipment_rack_skill
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="rackskillId != null  and rackskillId != ''">rack_skill_id,</if>
            <if test="rackId != null  and rackId != ''">rack_id,</if>
            <if test="rackAisleId != null  and rackAisleId != ''">rack_aisle_id,</if>
            <if test="dcRoomId != null  and dcRoomId != ''">dc_room_id,</if>
            <if test="datacenterId != null  and datacenterId != ''">datacenter_id,</if>
            <if test="factoryId != null  and factoryId != ''">factory_id,</if>
            <if test="skillNo != null ">skill_no,</if>
            <if test="rfId != null  and rfId != ''">rf_id,</if>
            <if test="skillState != null  and skillState != ''">skill_state,</if>
            <if test="rackEquipmentId != null  and rackEquipmentId != ''">rack_equipment_id,</if>
            <if test="serverskill != null  and serverskill != ''">server_skill,</if>
            <if test="skillLampState != null">skill_lamp_state,</if>
            <if test="remark != null">remark,</if>

         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="rackskillId != null  and rackskillId != ''">#{rackskillId},</if>
            <if test="rackId != null  and rackId != ''">#{rackId},</if>
            <if test="rackAisleId != null  and rackAisleId != ''">#{rackAisleId},</if>
            <if test="dcRoomId != null  and dcRoomId != ''">#{dcRoomId},</if>
            <if test="datacenterId != null  and datacenterId != ''">#{datacenterId},</if>
            <if test="factoryId != null  and factoryId != ''">#{factoryId},</if>
            <if test="skillNo != null ">#{skillNo},</if>
            <if test="rfId != null  and rfId != ''">#{rfId},</if>
            <if test="skillState != null  and skillState != ''">#{skillState},</if>
            <if test="rackEquipmentId != null  and rackEquipmentId != ''">#{rackEquipmentId},</if>
            <if test="serverskill != null  and serverskill != ''">#{serverskill},</if>
            <if test="skillLampState != null">#{skillLampState},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateUmEquipmentRackskill" parameterType="UmEquipmentRackskill">
        update um_equipment_rack_skill
        <trim prefix="SET" suffixOverrides=",">
            <if test="rackId != null">rack_id = #{rackId},</if>
            <if test="rackAisleId != null">rack_aisle_id = #{rackAisleId},</if>
            <if test="dcRoomId != null ">dc_room_id = #{dcRoomId},</if>
            <if test="datacenterId != null  ">datacenter_id = #{datacenterId},</if>
            <if test="factoryId != null">factory_id = #{factoryId},</if>
            <if test="skillNo != null ">skill_no = #{skillNo},</if>
            <if test="rfId != null  ">rf_id = #{rfId},</if>
            <if test="skillState != null ">skill_state = #{skillState},</if>
            <if test="rackEquipmentId != null">rack_equipment_id = #{rackEquipmentId},</if>
            <if test="serverskill != null ">server_skill = #{serverskill},</if>
            <if test="skillLampState != null ">skill_lamp_state = #{skillLampState},</if>
            <if test="remark != null ">remark = #{remark},</if>
        </trim>
        where rack_skill_id = #{rackskillId}
    </update>

    <!--逻辑删除时使用该语句
    <update id="deleteUmEquipmentRackskillByIds" parameterType="String">
        update um_equipment_rack_skill
        <trim prefix="SET" suffixOverrides=",">
            status = '1'
        </trim>
        where  rack_skill_id in
        <foreach item="rackskillId" collection="array" open="(" separator="," close=")">
            #{rackskillId}
        </foreach>
    </update>-->

    <delete id="deleteUmEquipmentRackskillById" parameterType="String">
        delete from um_equipment_rack_skill where rack_skill_id = #{rackskillId}
    </delete>

    <delete id="deleteUmEquipmentRackskillByIds" parameterType="String">
        delete from um_equipment_rack_skill where rack_skill_id in
        <foreach item="rackskillId" collection="array" open="(" separator="," close=")">
            #{rackskillId}
        </foreach>
    </delete>
    <!--批量更新-->
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
        update um_equipment_rack_skill
            <set>
                <if test="item.rackId != null">rack_id = #{item.rackId,jdbcType=VARCHAR},</if>
                <if test="item.rackAisleId != null ">rack_aisle_id = #{item.rackAisleId,jdbcType=VARCHAR},</if>
                <if test="item.dcRoomId != null ">dc_room_id = #{item.dcRoomId,jdbcType=VARCHAR},</if>
                <if test="item.datacenterId != null ">datacenter_id = #{item.datacenterId,jdbcType=VARCHAR},</if>
                <if test="item.factoryId != null">factory_id = #{item.factoryId,jdbcType=VARCHAR},</if>
                <if test="item.rfId != null">rf_id = #{item.rfId,jdbcType=VARCHAR},</if>
                <if test="item.skillState != null ">skill_state = #{item.skillState,jdbcType=VARCHAR},</if>
                <if test="item.rackEquipmentId != null">rack_equipment_id = #{item.rackEquipmentId,jdbcType=VARCHAR},</if>
                <if test="item.serverskill != null ">server_skill = #{item.serverskill,jdbcType=VARCHAR},</if>
                <if test="item.skillLampState != null ">skill_lamp_state = #{item.skillLampState,jdbcType=VARCHAR},</if>
            </set>
        where rack_skill_id = #{item.rackskillId,jdbcType=VARCHAR}
        </foreach>
    </update>
    <!--   批量新增-->
    <insert id="insertBatch" parameterType="java.util.List">
        INSERT INTO um_equipment_rack_skill (
        rack_skill_id,
        rack_id,
        rack_aisle_id,
        dc_room_id,
        datacenter_id,
        factory_id,
        skill_no,
        rf_id,
        skill_state,
        rack_equipment_id,
        server_skill,
        skill_lamp_state,
        remark
        )
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.rackskillId},
            #{item.rackId},
            #{item.rackAisleId},
            #{item.dcRoomId},
            #{item.datacenterId},
            #{item.factoryId},
            #{item.skillNo},
            #{item.rfId},
            #{item.skillState},
            #{item.rackEquipmentId},
            #{item.serverskill},
            #{item.skillLampState},
            #{item.remark}
            )
        </foreach>
    </insert>
    
</mapper>